# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/circle-101
    docker:
      - image: circleci/ruby:2.4.2-node-browsers
        environment:
          PGHOST: 127.0.0.1
          PGUSER: circle-101
          RAILS_ENV: test

      - image: circleci/postgres:9.6
        environment:
          POSTGRES_USER: circle-101
          POSTGRES_DB: circle-101_test
          POSTGRES_PASSWORD: ""

    steps:
      - checkout

      # Download and cache dependencies
      # Restore bundle cache
      - restore_cache:
          keys:
            - circle-101-bundle-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - circle-101-bundle-

      - run:
          name: Bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - save_cache:
          key: circle-101-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      # Restore yarn cache
      - restore_cache:
          keys:
            - circle-101-yarn-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - circle-101-yarn-

      - run:
          name: Yarn install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn cache
      - save_cache:
          key: circle-101-yarn-{{ "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Database setup
      - run:
          name: Setup db yaml file
          command: cp config/database.yml.sample config/database.yml
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database creation
          command: bin/rails db:migrate
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
